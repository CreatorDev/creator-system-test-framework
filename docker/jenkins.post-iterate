#!/bin/bash

#/************************************************************************************************************************
# Copyright (c) 2016, Imagination Technologies Limited and/or its affiliated group companies.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
# following conditions are met:
#     1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
#        following disclaimer.
#     2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
#        following disclaimer in the documentation and/or other materials provided with the distribution.
#     3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote
#        products derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#************************************************************************************************************************/

set -o errexit
set -o nounset

ENTRY_SCRIPT=$1
CONFIG_FILE=$2

if [ -z "$ENTRY_SCRIPT" ]
  then
    echo "No entry script supplied, using default"
    ENTRY_SCRIPT=docker/entry.sh
fi

if [ -z "$CONFIG_FILE" ]
  then
    echo "No config file supplied, using default"
    CONFIG_FILE=configs/docker.yml
fi

echo "Using entry script: $ENTRY_SCRIPT"
echo "Using config file: $CONFIG_FILE"

# remove existing container, if it exists:
if [[ "$(docker inspect --format="{{ .Id }}" test-env-container 2>/dev/null)" != "" ]]; then
  docker rm -f test-env-container
fi

# remove existing results:
rm -rf results

# container target command:
COMMAND="$ENTRY_SCRIPT -svv \
           --config nose.cfg \
           --tc-file $CONFIG_FILE \
           --with-tap --tap-outdir=results"

# create the container:
docker create -it \
	   --cap-add=NET_ADMIN --device=/dev/net/tun --privileged \
	   --workdir /home/user/DeviceManagementTests \
	   --name test-env-container \
	   test-env \
	   $COMMAND

# copy nosetests config.cfg to container:
docker cp DeviceManagementTests/nose.cfg test-env-container:/home/user/DeviceManagementTests

# run container:
# (if you run this manually, use -ai)
docker start -a test-env-container || true

# copy results out of container:
docker cp test-env-container:/home/user/DeviceManagementTests/results results

# archive the container:
# TODO
# docker tag test-env 
# docker push test-env

# Remove container image
docker rmi -f test-env:latest
